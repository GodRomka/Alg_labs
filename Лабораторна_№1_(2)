// Знайти в масиві і вивести на екран к-сть  додатних і к-сть від’ємних елементів масиву. 
#include <iostream>
#include <cstdlib>
#include <ctime>

int main() {
    const int rows = 5; // Кількість рядків у масиві
    const int cols = 4; // Кількість стовпців у масиві
    int numbers[rows][cols]; // Двовимірний масив розміром 5x4 для збереження чисел

    std::srand(std::time(0)); // Ініціалізація генератора випадкових чисел

    // Заповнюємо масив випадковими числами в діапазоні [-10, 10]
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < cols; ++j) {
            numbers[i][j] = std::rand() % 21 - 10; 
        }
    }

    int positive_count = 0; // Лічильник додатних елементів
    int negative_count = 0; // Лічильник від'ємних елементів
    
    std::cout << "Згенерована матриця:" << std::endl;
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < cols; ++j) {
            std::cout << numbers[i][j] << "\t"; // Виводимо елемент матриці та розділюємо табуляцією
        }
        std::cout << std::endl; // Переводимо рядок
    }

    // Лічильники кількості додатних і від'ємних елементів
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < cols; ++j) {
            if (numbers[i][j] > 0) { // Перевіряємо чи є поточний елемент додатнім
                positive_count++; // Якщо так, збільшуємо лічильник додатних
            } else if (numbers[i][j] < 0) { // Перевіряємо чи є поточний елемент від'ємним
                negative_count++; // Якщо так, збільшуємо лічильник від'ємних
            }
        }
    }

    std::cout << "Кількість додатних елементів: " << positive_count << std::endl; // Виводимо кількість додатних
    std::cout << "Кількість від'ємних елементів: " << negative_count << std::endl; // Виводимо кількість від'ємних

    return 0; // Кінець програми, повертає 0, що означає успішне завершення програми
}
